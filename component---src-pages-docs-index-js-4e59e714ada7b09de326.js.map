{"version":3,"sources":["webpack:///./src/components/styled.js","webpack:///./src/pages/docs/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/link.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["rhythm","typography","StyledLink","styled","Link","_templateObject","Desc","p","docs_templateObject","DocLink","_ref","_ref$node","node","_ref$node$meta","meta","title","description","slug","fields","react_default","a","createElement","to","key","pageQuery","__webpack_exports__","_ref2","data","layout","allOrgContent","edges","map","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2__","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2___default","theme","plugins","CodePlugin","Typography","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","activeClassName","other","objectWithoutPropertiesLoose_default","test","gatsby_browser_entry","href","Container","header","MenuItem","_templateObject2","Menu","div","_templateObject3","Title","h1","_templateObject4","Logo","_templateObject5","Header","siteTitle","defaultProps","layout_templateObject","Layout","layout_Container","Helmet_default","site","siteMetadata","name","content","lang","style","padding","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-docs-index-js-4e59e714ada7b09de326.js","sourcesContent":["import { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport typography from '../utils/typography'\nconst { rhythm } = typography\n\nexport const StyledLink = styled(Link)`\ndisplay: block;\ntext-decoration: none;\npadding: ${rhythm(0.05)} ${rhythm(0.4)};\nborder-radius: ${rhythm(0.2)};\n&:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: #f1f1f1;\n}\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Layout from '../../components/layout'\nimport { StyledLink } from '../../components/styled'\nimport { graphql } from 'gatsby'\n\nconst Desc = styled.p`\ncolor: gray;\n`\n\nconst DocLink = ({ node: { meta: { title, description }, fields: { slug } } }) => (\n  <StyledLink to={slug} key={`doc-link-${slug}`}>\n    <h3>{ title }</h3>\n    <Desc>{ description }</Desc>\n  </StyledLink>\n)\n\nexport default ({ data }) => (\n  <Layout>\n    <div>{ data.allOrgContent.edges.map(DocLink) }</div>\n  </Layout>\n)\n\nexport const pageQuery = graphql`\n  query AllDocs {\n    allOrgContent(\n      filter: { meta: { category: { eq: \"docs\" } } }\n  ) {\n      edges {\n        node {\n          meta {\n            title\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\nimport theme from 'typography-theme-github'\nimport CodePlugin from 'typography-plugin-code'\ntheme.plugins = [\n  new CodePlugin(),\n]\n\nconst typography = new Typography(theme)\n\nexport default typography\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link as GatsbyLink } from \"gatsby\"\n\n// Since DOM elements <a> cannot receive activeClassName,\n// destructure the prop here and pass it only to GatsbyLink\nconst Link = ({ children, to, activeClassName, ...other }) => {\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(to)\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink to={to} activeClassName={activeClassName} {...other}>\n        {children}\n      </GatsbyLink>\n    )\n  }\n  return (\n    <a href={to} {...other}>\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import styled from 'styled-components'\nimport Link from './link'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport typography from '../utils/typography'\nconst { rhythm } = typography\n\nconst Container = styled.header`\npadding-top: 3rem;\npadding-bottom: 2rem;\n`\n\nconst MenuItem = styled(Link)`\ndisplay: block;\ntext-decoration: none;\nborder-radius: 0.4rem;\npadding: .5rem 1.5rem;\ntext-align: center;\n&:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: #f1f1f1;\n}\n`\n\nconst Menu = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nconst Title = styled.h1`\ncolor: gray;\nmargin: 0 auto;\npadding-bottom: ${rhythm(1.5)};\ntext-align: center;\nborder-bottom: none;\n`\n\nconst Logo = styled(Link)`\n`\n\n\nconst Header = ({ siteTitle }) => (\n  <Container>\n    <Logo to='/'>\n      <Title>{ siteTitle }</Title>\n    </Logo>\n    <Menu>\n      <MenuItem to=\"/docs\">DOCS</MenuItem>\n      <MenuItem to=\"/ast\">AST</MenuItem>\n      <MenuItem to=\"/syntax\">SYNTAX</MenuItem>\n      <MenuItem to=\"https://github.com/xiaoxinghu/orgajs\">CODE</MenuItem>\n    </Menu>\n  </Container>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'prismjs/themes/prism.css'\n\nconst Container = styled.div`\nmargin: auto;\nmax-width: 740px;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Container>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </Container>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}