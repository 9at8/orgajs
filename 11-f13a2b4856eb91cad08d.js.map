{"version":3,"sources":["webpack:///./node_modules/orga/src/node.js","webpack:///./node_modules/orga/src/inline.js","webpack:///./node_modules/orga/src/defaults.js","webpack:///./node_modules/orga/src/timestamp.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js","webpack:///./node_modules/orga/src/index.js","webpack:///./node_modules/orga/src/parser.js","webpack:///./node_modules/orga/src/lexer.js","webpack:///./node_modules/core-js/modules/es6.object.define-properties.js","webpack:///./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/_own-keys.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/orga/src/utils.js","webpack:///./node_modules/orga/src/processors/index.js","webpack:///./node_modules/orga/src/processors/keyword.js","webpack:///./node_modules/orga/src/processors/headline.js","webpack:///./node_modules/orga/src/uri.js","webpack:///./node_modules/orga/src/processors/line.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/orga/src/processors/block.js","webpack:///./node_modules/orga/src/processors/list.js","webpack:///./node_modules/orga/src/processors/table.js","webpack:///./node_modules/orga/src/processors/horizontal-rule.js","webpack:///./node_modules/orga/src/processors/footnote.js","webpack:///./node_modules/orga/src/processors/blank.js"],"names":["Node","type","children","arguments","length","undefined","this","push","__webpack_require__","prototype","with","data","Object","assign","node","Array","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","n","value","err","parent","newNode","module","exports","uri","LINK_PATTERN","FOOTNOTE_PATTERN","PRE","POST","BORDER","_parse","pattern","text","post","m","exec","shift","before","after","pop","nodes","concat","reduce","all","hasOwnProperty","parse","captures","desc","label","_loop","_markups$_i","_markups","_i","name","marker","RegExp","markup","todos","_timestamp","date","time","day","open","close","single","prefix","full","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","input","end","_m$groups","groups","beginDate","beginTimeBegin","beginTimeEnd","endDate","endTimeBegin","_parseDate","str","Date","$export","toLength","context","$startsWith","P","F","startsWith","searchString","that","index","Math","min","search","String","call","slice","Parser","timestamp","string","options","parseTimestamp","Lexer","lexer","_aks","_cel","peek","getToken","cursor","hasNext","lines","consume","tokens","i","tokenize","downgradeToLine","raw","content","trim","tryTo","process","restorePoint","result","bind","processor","document","meta","split","parseSection","unagi","element","keys","attributes","section","token","p","_defineProperty","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","escape","Syntax","rules","define","update","findIndex","r","newRule","splice","org","headlinePattern","map","join","level","keyword","priority","tags","key","syntax","updateTODOs","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","params","indent","bullet","ordered","includes","checked","cells","_step$value","S","toIObject","gOPD","createProperty","O","getDesc","f","gOPN","gOPS","anObject","Reflect","it","getSymbols","$find","KEY","forced","callbackfn","matchOperatorsRe","TypeError","replace","headline","line","block","list","table","horizontalRule","footnote","blank","block.begin","list.item","table.row","_token$data","val","field","toLowerCase","inlineParse","parsePlanning","parseDrawer","begin","t","planning","drawer","newSection","URL_PATTERN","link","protocol","match","location","query","q","ln","parseInt","processQuery","processFilePath","_toConsumableArray","_token","newNodes","last","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","arr2","iter","toString","from","parseBlock","_t$data","_t","toUpperCase","format","self","parseListItem","_self$next$data","item","_self$peek","parseList","c","row","parseTable"],"mappings":"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","file":"11-f13a2b4856eb91cad08d.js","sourcesContent":["require(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nfunction Node(type) {\n  var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  this.type = type;\n  this.children = [];\n  this.push(children);\n}\n\nNode.prototype = {\n  \"with\": function _with(data) {\n    var newNode = this;\n    newNode = Object.assign(this, data);\n    return newNode;\n  },\n  push: function push(node) {\n    if (Array.isArray(node)) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = node[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var n = _step.value;\n          this.push(n);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else if (node instanceof Node) {\n      node.parent = this;\n      this.children.push(node);\n    } else if (typeof node === \"string\") {\n      var newNode = new Node(\"text\")[\"with\"]({\n        value: node\n      });\n      newNode.parent = this;\n      this.children.push(newNode);\n    }\n  }\n};\nmodule.exports = Node;","require(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar Node = require('./node');\n\nvar uri = require('./uri');\n\nvar LINK_PATTERN = /(.*?)\\[\\[([^\\]]*)\\](?:\\[([^\\]]*)\\])?\\](.*)/m; // \\1 => link, \\2 => text\n\nvar FOOTNOTE_PATTERN = /(.*?)\\[fn:(\\w+)\\](.*)/;\nvar PRE = \"(?:[\\\\s\\\\({'\\\"]|^)\";\nvar POST = \"(?:[\\\\s-\\\\.,:!?'\\\\)}]|$)\";\nvar BORDER = \"[^,'\\\"\\\\s]\";\n\nfunction markup(marker) {\n  return RegExp(\"(.*?\".concat(PRE, \")\").concat(marker, \"(\").concat(BORDER, \"(?:.*?(?:\").concat(BORDER, \"))?)\").concat(marker, \"(\").concat(POST, \".*)\"), 'm');\n}\n\nfunction parse(text) {\n  text = _parse(LINK_PATTERN, text, function (captures) {\n    return new Node(\"link\")[\"with\"]({\n      uri: uri(captures[0]),\n      desc: captures[1]\n    });\n  });\n  text = _parse(FOOTNOTE_PATTERN, text, function (captures) {\n    return new Node(\"footnote.reference\")[\"with\"]({\n      label: captures[0]\n    });\n  });\n  var markups = [{\n    name: \"bold\",\n    marker: \"\\\\*\"\n  }, {\n    name: \"verbatim\",\n    marker: \"=\"\n  }, {\n    name: \"italic\",\n    marker: \"/\"\n  }, {\n    name: \"strikeThrough\",\n    marker: \"\\\\+\"\n  }, {\n    name: \"underline\",\n    marker: \"_\"\n  }, {\n    name: \"code\",\n    marker: \"~\"\n  }];\n\n  var _loop = function _loop() {\n    var _markups$_i = _markups[_i],\n        name = _markups$_i.name,\n        marker = _markups$_i.marker;\n    text = _parse(markup(marker), text, function (captures) {\n      return new Node(name, captures[0]);\n    });\n  };\n\n  for (var _i = 0, _markups = markups; _i < _markups.length; _i++) {\n    _loop();\n  }\n\n  return text;\n}\n\nfunction _parse(pattern, text, post) {\n  if (typeof text === \"string\") {\n    var m = pattern.exec(text);\n    if (!m) return [new Node(\"text\")[\"with\"]({\n      value: text\n    })];\n    m.shift();\n    var before = m.shift();\n    var after = m.pop();\n    var nodes = [];\n\n    if (before.length > 0) {\n      nodes.push(new Node(\"text\")[\"with\"]({\n        value: before\n      }));\n    }\n\n    if (m.length > 0) {\n      nodes.push(post(m)); // nodes.push(new Node(name).with({ value: match }))\n    }\n\n    if (after) {\n      nodes = nodes.concat(_parse(pattern, after, post));\n    }\n\n    return nodes;\n  }\n\n  if (Array.isArray(text)) {\n    return text.reduce(function (all, node) {\n      if (node.hasOwnProperty(\"type\") && node.type !== \"text\") {\n        return all.concat(node);\n      }\n\n      return all.concat(_parse(pattern, node, post));\n    }, []);\n  }\n\n  if (typeof text.value === \"string\") {\n    return _parse(pattern, text.value, post);\n  }\n\n  return undefined;\n}\n\nmodule.exports = {\n  parse: parse\n};","exports = {\n  todos: [\"TODO\", \"DONE\"]\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\nvar _timestamp = {\n  date: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\",\n  time: \"\\\\d{2}:\\\\d{2}\",\n  day: \"[a-zA-Z]+\",\n  open: \"[<\\\\[]\",\n  close: \"[>\\\\]]\"\n};\n\n_timestamp.single = function (prefix) {\n  return \"\".concat(_timestamp.open, \"(?<\").concat(prefix, \"Date>\").concat(_timestamp.date, \")\\\\s+\").concat(_timestamp.day, \"(?:\\\\s+(?<\").concat(prefix, \"TimeBegin>\").concat(_timestamp.time, \")(?:-(?<\").concat(prefix, \"TimeEnd>\").concat(_timestamp.time, \"))?)?\").concat(_timestamp.close);\n};\n\n_timestamp.full = \"^\\\\s*(\".concat(_timestamp.single('begin'), \")(?:--\").concat(_timestamp.single('end'), \")?\\\\s*$\");\nvar timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\nvar parse = function parse(input) {\n  var m = input;\n\n  if (typeof input === 'string') {\n    m = RegExp(_timestamp.full, 'i').exec(m);\n  }\n\n  if (!m) return null;\n  var _m$groups = m.groups,\n      beginDate = _m$groups.beginDate,\n      beginTimeBegin = _m$groups.beginTimeBegin,\n      beginTimeEnd = _m$groups.beginTimeEnd,\n      endDate = _m$groups.endDate,\n      endTimeBegin = _m$groups.endTimeBegin;\n\n  var _parseDate = function _parseDate(date, time) {\n    var str = date;\n    if (time) str += \" \".concat(time, \":00\");\n    str += \" (\".concat(timezone, \")\");\n    return new Date(str);\n  };\n\n  var date = _parseDate(beginDate, beginTimeBegin);\n\n  var end;\n\n  if (beginTimeEnd) {\n    end = _parseDate(beginDate, beginTimeEnd);\n  } else if (endDate) {\n    end = _parseDate(endDate, endTimeBegin);\n  }\n\n  return {\n    date: date,\n    end: end\n  };\n};\n\nmodule.exports = {\n  parse: parse,\n  pattern: _timestamp.full\n};","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","var Parser = require('./parser');\n\nvar timestamp = require('./timestamp');\n\nfunction parse(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : require('./defaults');\n  var parser = new Parser(options);\n  return parser.parse(string);\n}\n\nmodule.exports = {\n  Parser: Parser,\n  parse: parse,\n  parseTimestamp: timestamp.parse\n};","require(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nvar Lexer = require('./lexer');\n\nvar Node = require('./node');\n\nfunction Parser() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : require('./defaults');\n  this.options = options;\n  this.lexer = new Lexer(this.options);\n  this.prefix = [];\n  this._aks = {}; // Affiliated Keywords\n\n  this._cel = 0; // Consecutive Empty Lines\n}\n\nParser.prototype.peek = function () {\n  if (this.prefix.length > 0) return this.prefix[0];\n  return this.getToken(this.cursor + 1);\n};\n\nParser.prototype.hasNext = function () {\n  return this.prefix.length > 0 || this.cursor + 1 < this.lines.length;\n};\n\nParser.prototype.consume = function () {\n  if (this.prefix.length > 0) return this.prefix.shift();\n  this.cursor++;\n  return this.getToken(this.cursor);\n};\n\nParser.prototype.next = function () {\n  return this.consume();\n};\n\nParser.prototype.getToken = function (index) {\n  var self = this;\n\n  if (index >= self.lines.length) {\n    return undefined;\n  }\n\n  if (index >= self.tokens.length) {\n    var start = self.tokens.length;\n\n    for (var i = start; i <= index; i++) {\n      self.tokens.push(self.lexer.tokenize(self.lines[i]));\n    }\n  }\n\n  return self.tokens[index];\n};\n\nParser.prototype.downgradeToLine = function (index) {\n  var raw = this.tokens[index].raw;\n  this.tokens[index] = {\n    name: \"line\",\n    raw: raw,\n    data: {\n      content: raw.trim()\n    }\n  };\n};\n\nParser.prototype.tryTo = function (process) {\n  var restorePoint = this.cursor;\n  var result = process.bind(this)();\n\n  if (result) {\n    return result;\n  }\n\n  this.cursor = restorePoint;\n  return result;\n};\n\nParser.prototype.processor = require('./processors');\n\nParser.prototype.parse = function (string) {\n  var self = this;\n  var document = new Node('root')[\"with\"]({\n    meta: {}\n  });\n  self.cursor = -1;\n  self.lines = string.split('\\n'); // TODO: more robust lines?\n\n  self.tokens = [];\n  return this.parseSection(document);\n};\n/* Total Awareness -- according to Ross */\n\n\nParser.prototype.unagi = function (element) {\n  if (Object.keys(this._aks).length === 0) return element;\n  element.attributes = this._aks;\n  return element;\n};\n\nParser.prototype.parseSection = function (section) {\n  var token = this.peek();\n  if (!token) return section;\n  if (token.name !== \"blank\") this._cel = 0; // reset consecutive empty lines\n\n  var p = this.processor[token.name];\n\n  if (p) {\n    return p.bind(this)(token, section);\n  }\n\n  this.consume();\n  this._aks = {};\n  return this.parseSection(section);\n};\n\nmodule.exports = Parser;","require(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.define-properties\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _defineProperty = require(\"/home/travis/build/xiaoxinghu/orgajs/www/node_modules/@babel/runtime/helpers/defineProperty\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _require = require('./utils'),\n    escape = _require.escape;\n\nvar timestamp = require('./timestamp');\n\nfunction Syntax() {\n  this.rules = [];\n}\n\nSyntax.prototype = {\n  define: function define(name, pattern) {\n    var post = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n      return {};\n    };\n    this.rules.push({\n      name: name,\n      pattern: pattern,\n      post: post\n    });\n  },\n  update: function update(name, pattern) {\n    var i = this.rules.findIndex(function (r) {\n      return r.name === name;\n    });\n    var newRule = {\n      name: name,\n      post: function post() {}\n    };\n\n    if (i !== -1) {\n      newRule = this.rules.splice(i, 1)[0];\n    }\n\n    newRule.pattern = pattern;\n    this.rules.splice(i, 0, newRule);\n  }\n};\nvar org = new Syntax();\n\nfunction headlinePattern() {\n  var todos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['TODO', 'DONE'];\n  return RegExp(\"^(\\\\*+)\\\\s+(?:(\".concat(todos.map(escape).join('|'), \")\\\\s+)?(?:\\\\[#(A|B|C)\\\\]\\\\s+)?(.*?)\\\\s*(:(?:\\\\w+:)+)?$\"));\n}\n\norg.define('headline', headlinePattern(), function (m) {\n  var level = m[1].length;\n  var keyword = m[2];\n  var priority = m[3];\n  var content = m[4];\n  var tags = (m[5] || '').split(':').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return {\n    level: level,\n    keyword: keyword,\n    priority: priority,\n    content: content,\n    tags: tags\n  };\n});\norg.define('keyword', /^\\s*#\\+(\\w+):\\s*(.*)$/, function (m) {\n  var key = m[1];\n  var value = m[2];\n  return {\n    key: key,\n    value: value\n  };\n});\nvar PLANNING_KEYWORDS = ['DEADLINE', 'SCHEDULED', 'CLOSED'];\norg.define('planning', RegExp(\"^\\\\s*(\".concat(PLANNING_KEYWORDS.join('|'), \"):\\\\s*(.+)$\")), function (m) {\n  var keyword = m[1];\n  return _objectSpread({\n    keyword: keyword\n  }, timestamp.parse(m[2]));\n});\norg.define('timestamp', RegExp(timestamp.pattern, 'i'), function (m) {\n  return timestamp.parse(m);\n});\norg.define('block.begin', /^\\s*#\\+begin_(\\w+)(.*)$/i, function (m) {\n  var type = m[1];\n  var params = m[2].split(' ').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return {\n    type: type,\n    params: params\n  };\n});\norg.define('block.end', /^\\s*#\\+end_(\\w+)$/i, function (m) {\n  var type = m[1];\n  return {\n    type: type\n  };\n});\norg.define('drawer.end', /^\\s*:end:\\s*$/i);\norg.define('drawer.begin', /^\\s*:(\\w+):\\s*$/, function (m) {\n  var type = m[1];\n  return {\n    type: type\n  };\n});\norg.define('list.item', /^(\\s*)([-+]|\\d+[.)])\\s+(?:\\[(x|X|-| )\\])?(.*)$/, function (m) {\n  var indent = m[1].length;\n  var bullet = m[2];\n  var content = m[4];\n  var ordered = true;\n\n  if ([\"-\", \"+\"].includes(bullet)) {\n    ordered = false;\n  }\n\n  var result = {\n    indent: indent,\n    ordered: ordered,\n    content: content\n  };\n\n  if (m[3]) {\n    var checked = m[3] !== ' ';\n    result.checked = checked;\n  }\n\n  return result;\n});\norg.define('table.separator', /^\\s*\\|-/);\norg.define('table.row', /^\\s*\\|(\\s*.+\\|)+\\s*$/, function (m) {\n  var cells = m[1].split('|').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return {\n    cells: cells\n  };\n});\norg.define('horizontalRule', /^\\s*-{5,}\\s*$/);\norg.define('comment', /^\\s*#\\s.*$/);\norg.define('footnote', /^\\[fn:(\\w+)\\]\\s+(.*)$/, function (m) {\n  var label = m[1];\n  var content = m[2];\n  return {\n    label: label,\n    content: content\n  };\n});\n\nfunction Lexer() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : require('./defaults');\n  this.syntax = org;\n  var todos = options.todos;\n\n  if (todos) {\n    this.updateTODOs(todos);\n  }\n}\n\nLexer.prototype = {\n  tokenize: function tokenize(input) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = this.syntax.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = _step.value,\n            name = _step$value.name,\n            pattern = _step$value.pattern,\n            post = _step$value.post;\n        var m = pattern.exec(input);\n\n        if (!m) {\n          continue;\n        }\n\n        var token = {\n          name: name,\n          raw: input\n        };\n        token.data = post(m);\n        return token;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var trimed = input.trim();\n\n    if (trimed === '') {\n      return {\n        name: \"blank\",\n        raw: input\n      };\n    }\n\n    return {\n      name: \"line\",\n      raw: input\n    };\n  },\n  updateTODOs: function updateTODOs(todos) {\n    this.syntax.update(\"headline\", headlinePattern(todos));\n  }\n};\nmodule.exports = Lexer;","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export = require('./_export');\nvar ownKeys = require('./_own-keys');\nvar toIObject = require('./_to-iobject');\nvar gOPD = require('./_object-gopd');\nvar createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIObject(object);\n    var getDesc = gOPD.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var i = 0;\n    var key, desc;\n    while (keys.length > i) {\n      desc = getDesc(O, key = keys[i++]);\n      if (desc !== undefined) createProperty(result, key, desc);\n    }\n    return result;\n  }\n});\n","// all object keys, includes non-enumerable and symbols\nvar gOPN = require('./_object-gopn');\nvar gOPS = require('./_object-gops');\nvar anObject = require('./_an-object');\nvar Reflect = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = gOPN.f(anObject(it));\n  var getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","require(\"core-js/modules/es6.regexp.replace\");\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nfunction escape(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return str.replace(matchOperatorsRe, '\\\\$&');\n}\n\nmodule.exports = {\n  escape: escape\n};","var keyword = require('./keyword');\n\nvar headline = require('./headline');\n\nvar line = require('./line');\n\nvar block = require('./block');\n\nvar list = require('./list');\n\nvar table = require('./table');\n\nvar horizontalRule = require('./horizontal-rule');\n\nvar footnote = require('./footnote');\n\nvar blank = require('./blank');\n\nmodule.exports = {\n  keyword: keyword,\n  headline: headline,\n  line: line,\n  \"block.begin\": block,\n  \"list.item\": list,\n  \"table.row\": table,\n  horizontalRule: horizontalRule,\n  footnote: footnote,\n  blank: blank\n};","require(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nvar Node = require('../node');\n\nfunction process(token, section) {\n  var _token$data = token.data,\n      key = _token$data.key,\n      value = _token$data.value;\n\n  switch (key) {\n    case \"TODO\":\n      if (section.type !== \"root\") break;\n      var todos = value.split(/\\s|\\|/g).filter(String).map(function (val) {\n        return /(.*?)(?:\\(.*?\\))?$/.exec(val)[1];\n      });\n      section.meta.todos = todos;\n      this.lexer.updateTODOs(todos);\n      break;\n\n    case \"HTML\":\n      section.push(new Node(\"html\")[\"with\"]({\n        value: value\n      }));\n      break;\n\n    case \"CAPTION\":\n    case \"HEADER\":\n    case \"NAME\":\n    case \"PLOT\":\n    case \"RESULTS\":\n      this._aks[key] = value;\n      break;\n\n    default:\n      if (section.type === \"root\") {\n        var field = key.toLowerCase();\n\n        if (!section.meta[field]) {\n          section.meta[field] = value;\n        } else {\n          if (!Array.isArray(section.meta[field])) {\n            var list = [];\n            list.push(section.meta[field]);\n            section.meta[field] = list;\n          }\n\n          section.meta[field].push(value);\n        }\n      }\n\n      break;\n  }\n\n  this.consume();\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.function.name\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction parsePlanning() {\n  var token = this.next();\n\n  if (!token || token.name !== \"planning\") {\n    return undefined;\n  }\n\n  return new Node('planning')[\"with\"](token.data);\n}\n\nfunction parseDrawer() {\n  var begin = this.next();\n  var lines = [];\n\n  while (this.hasNext()) {\n    var t = this.next();\n\n    if (t.name === \"headline\") {\n      return undefined;\n    }\n\n    if (t.name === \"drawer.end\") {\n      return new Node('drawer')[\"with\"]({\n        name: begin.data.type,\n        value: lines.join(\"\\n\")\n      });\n    }\n\n    lines.push(t.raw);\n  }\n\n  return undefined;\n}\n\nfunction parseTimestamp() {\n  var token = this.next();\n\n  if (!token || token.name !== \"timestamp\") {\n    return undefined;\n  }\n\n  return new Node('timestamp')[\"with\"](token.data);\n}\n\nfunction process(token, section) {\n  if (section.type === \"footnote.definition\") return section; // headline breaks footnote\n\n  var _token$data = token.data,\n      level = _token$data.level,\n      keyword = _token$data.keyword,\n      priority = _token$data.priority,\n      tags = _token$data.tags,\n      content = _token$data.content;\n  var currentLevel = section.level || 0;\n\n  if (level <= currentLevel) {\n    return section;\n  }\n\n  this.consume();\n  var text = inlineParse(content);\n  var headline = new Node('headline', text)[\"with\"]({\n    level: level,\n    keyword: keyword,\n    priority: priority,\n    tags: tags\n  });\n  var planning = this.tryTo(parsePlanning);\n\n  if (planning) {\n    headline.push(planning);\n  }\n\n  var timestamp = this.tryTo(parseTimestamp);\n\n  if (timestamp) {\n    headline.push(timestamp);\n  }\n\n  while (this.hasNext() && this.peek().name === \"drawer.begin\") {\n    var drawer = this.tryTo(parseDrawer);\n\n    if (!drawer) {\n      // broken drawer\n      this.downgradeToLine(this.cursor + 1);\n      break;\n    }\n\n    headline.push(drawer);\n  }\n\n  var newSection = new Node(\"section\")[\"with\"]({\n    level: level\n  });\n  newSection.push(headline);\n  section.push(this.parseSection(this.unagi(newSection)));\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nvar URL_PATTERN = /(?:([a-z][a-z0-9+.-]*):)?(.*)/;\n\nfunction parse(link) {\n  var result = {\n    raw: link\n  };\n  var m = URL_PATTERN.exec(link);\n  if (!m) return result;\n  result.protocol = (m[1] || (isFilePath(m[2]) ? \"file\" : \"internal\")).toLowerCase();\n  result.location = m[2];\n  return processFilePath(result);\n\n  function isFilePath(str) {\n    return str.match(/^\\.{0,2}\\//);\n  }\n}\n\nfunction processFilePath(link) {\n  if (link.protocol !== \"file\") return link; // const pattern = /([^:]*?)(?:::(.*))?/\n\n  var pattern = /(.*?)::(.*)/;\n  var m = pattern.exec(link.location);\n  if (!m) return link;\n\n  if (m[2]) {\n    link.location = m[1];\n    link.query = processQuery(m[2]);\n  }\n\n  return link;\n}\n\nfunction processQuery(q) {\n  var ln = parseInt(q);\n\n  if (ln) {\n    return {\n      ln: ln\n    };\n  }\n\n  if (q.startsWith(\"*\")) {\n    var headline = q.replace(/^\\*+/, '');\n    return {\n      headline: headline\n    };\n  }\n\n  return {\n    text: q\n  };\n}\n\nmodule.exports = parse;","var _toConsumableArray = require(\"/home/travis/build/xiaoxinghu/orgajs/www/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction process(token, section) {\n  var nodes = [];\n\n  while (this.hasNext()) {\n    var _token = this.peek(); // also eats broken block/drawer ends\n\n\n    if (![\"line\", \"block.end\", \"drawer.end\"].includes(_token.name)) break;\n    this.consume();\n    push(_token.raw.trim());\n  }\n\n  section.push(new Node(\"paragraph\", nodes));\n  this._aks = {};\n  return this.parseSection(section);\n\n  function push(line) {\n    var newNodes = inlineParse(line); // merge text newNodes\n\n    if (nodes.length > 0 && nodes[nodes.length - 1].type === \"text\" && newNodes.length > 0 && newNodes[0].type === \"text\") {\n      var n = newNodes.shift();\n      var last = nodes.pop();\n      last.value = \"\".concat(last.value, \" \").concat(n.value);\n      nodes.push(last);\n    }\n\n    nodes = [].concat(_toConsumableArray(nodes), _toConsumableArray(newNodes));\n  }\n}\n\nmodule.exports = process;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","require(\"core-js/modules/es6.function.name\");\n\nvar Node = require('../node');\n\nfunction parseBlock() {\n  var t = this.next();\n  var _t$data = t.data,\n      type = _t$data.type,\n      params = _t$data.params;\n  var lines = [];\n\n  while (this.hasNext()) {\n    var _t = this.next();\n\n    if (_t.name === \"headline\") {\n      return undefined;\n    }\n\n    if (_t.name === \"block.end\" && _t.data.type.toUpperCase() === type.toUpperCase()) {\n      if (_t.data.type.toUpperCase() === \"EXPORT\") {\n        var format = params[0];\n        return new Node(format)[\"with\"]({\n          value: lines.join(\"\\n\")\n        });\n      }\n\n      return new Node('block')[\"with\"]({\n        name: type.toUpperCase(),\n        params: params,\n        value: lines.join(\"\\n\")\n      });\n    }\n\n    lines.push(_t.raw);\n  }\n\n  return undefined;\n}\n\nfunction process(token, section) {\n  var block = this.tryTo(parseBlock);\n  if (block) section.push(this.unagi(block));else this.downgradeToLine(this.cursor + 1);\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction process(token, section) {\n  var self = this;\n\n  var parseListItem = function parseListItem() {\n    var _self$next$data = self.next().data,\n        indent = _self$next$data.indent,\n        content = _self$next$data.content,\n        ordered = _self$next$data.ordered,\n        checked = _self$next$data.checked;\n    var lines = [content];\n    var item = new Node(\"list.item\")[\"with\"]({\n      ordered: ordered\n    });\n\n    if (checked !== undefined) {\n      item.checked = checked;\n    }\n\n    while (self.hasNext()) {\n      var _self$peek = self.peek(),\n          name = _self$peek.name,\n          raw = _self$peek.raw;\n\n      if (name !== \"line\") break;\n      var lineIndent = raw.search(/\\S/);\n      if (lineIndent <= indent) break;\n      lines.push(self.next().raw.trim());\n    }\n\n    item.push(inlineParse(lines.join(\" \")));\n    return item;\n  };\n\n  var parseList = function parseList(level) {\n    var list = new Node(\"list\");\n\n    while (self.hasNext()) {\n      var _token = self.peek();\n\n      if (_token.name !== \"list.item\") break;\n      var indent = _token.data.indent;\n      if (indent <= level) break;\n      var item = parseListItem();\n      item.push(parseList(indent));\n      list.push(item);\n    }\n\n    if (list.children.length > 0) {\n      // list\n      list.ordered = list.children[0].ordered;\n      return list;\n    }\n\n    return undefined;\n  };\n\n  section.push(this.unagi(parseList(-1)));\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction process(token, section) {\n  var self = this;\n\n  var parseTable = function parseTable() {\n    var table = new Node(\"table\");\n\n    while (self.hasNext()) {\n      var _token = self.peek();\n\n      if (!_token.name.startsWith(\"table.\")) break;\n      self.consume();\n\n      if (_token.name === \"table.separator\") {\n        table.push(new Node(\"table.separator\"));\n        continue;\n      }\n\n      if (_token.name !== \"table.row\") break;\n\n      var cells = _token.data.cells.map(function (c) {\n        return new Node(\"table.cell\", inlineParse(c));\n      });\n\n      var row = new Node(\"table.row\", cells);\n      table.push(row);\n    }\n\n    return table;\n  };\n\n  var table = this.unagi(parseTable());\n  section.push(table);\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","var Node = require('../node');\n\nfunction process(token, section) {\n  this.consume();\n  section.push(new Node(\"horizontalRule\"));\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.string.trim\");\n\nvar Node = require('../node');\n\nfunction process(token, section) {\n  if (section.type === \"footnote.definition\") return section; // footnote breaks footnote\n\n  var self = this;\n\n  var parseFootnote = function parseFootnote() {\n    var _self$next$data = self.next().data,\n        label = _self$next$data.label,\n        content = _self$next$data.content;\n    self.prefix = [{\n      name: \"line\",\n      raw: content,\n      data: {\n        content: content.trim()\n      }\n    }];\n    return self.parseSection(new Node(\"footnote.definition\")[\"with\"]({\n      label: label\n    }));\n  };\n\n  section.push(parseFootnote());\n  self._aks = {};\n  return self.parseSection(section);\n}\n\nmodule.exports = process;","function process(token, section) {\n  var self = this;\n  self._cel++;\n  self.consume();\n  if (section.type === \"footnote\" && self._cel > 1) return section;\n  self._aks = {};\n  return self.parseSection(section);\n}\n\nmodule.exports = process;"],"sourceRoot":""}